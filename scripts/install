#!/usr/bin/env bash
set -eo pipefail
# This script installs the Norsk Studio on your system by
# downloading a binary distribution and running its installer script
# (which in turn pulls various Docker containers).  It is based on
# the nix install script (https://nixos.org/nix/install)

{ # Prevent execution if this script was only partially downloaded
    umask 0022

    # Various helper functions
    oops() {
        echo "$0:" "$@" >&2
        exit 1
    }

    require_util() {
        command -v "$1" > /dev/null 2>&1 ||
        oops "you do not have '$1' installed, which I need to $2"
    }

    realpath() {
        local expanded="${1/#\~/$HOME}"
        echo "$(cd "$(dirname "$expanded")" && pwd)/$(basename "$expanded")"
    }

    find_license() {
        echo
        echo "Norsk Studio needs a license file to operate."
        echo "You can get a FREE trial license from"
        echo "https://norsk.video"
        echo

        while [[ ! -f "$abs_lp" ]]; do
            read -r -e -p "Enter the path to your Norsk license file (TAB completion is available): " license_path
            if [[ $license_path == "" ]]; then
                oops "no license file provided"
            fi
            abs_lp=$(realpath $license_path)

            if [[ ! -f "$abs_lp" ]]; then
                echo "The specified license file not found. Please try again."
            else
                cp "$abs_lp" "$tmpLicense"
            fi
        done
    }

    targetDirname="norsk-studio"
    releaseVersion="v1.0.383"
    releaseURL="https://github.com/norskvideo/norsk-studio-docker/archive/refs/tags/$releaseVersion.tar.gz"

    releaseHash="fb692559f28da511e346dfd7ecf637cc68a87743ba4a4851f10928617d3ec162"
    tmpDir="$(mktemp -d -t norsk-studio-tarball-unpack.XXXXXXXXXX || \
        oops "Can't create temporary directory for downloading the Norsk Studio tarball")"
    tmpLicense=$tmpDir/license.json
    tarball=$tmpDir/norsk-studio-$releaseVersion.tar.gz

    cleanup() {
        # shellcheck disable=SC2317
        rm -rf "$tmpDir"
        echo
    }

    echo
    echo "Welcome to the Norsk Studio installer.  This script will download"
    echo "and install the Norsk Engine and Norsk Studio containers into your"
    echo "local docker.  It will also create a directory at the current location"
    echo "called norsk-studio containing a couple of helper scripts and some"
    echo "sample content. In total, this requires 7GB of disk space. After"
    echo "installation, you can completely remove Norsk Studio by simply"
    echo "deleting the norsk-studio directory and removing the two docker"
    echo "containers."
    echo
    echo "If you wish to proceed then press 'enter', otherwise"
    echo "press ctrl-c to abort the script."
    read -r

    trap cleanup EXIT INT QUIT TERM

    # Check prerequisites
    echo "Checking prerequisites"
    require_util tar "unpack the binary tarball"

    if command -v curl > /dev/null 2>&1; then
        fetch() { curl  --silent --fail -L "$1" -o "$2"; }
        elif command -v wget > /dev/null 2>&1; then
        fetch() { wget --quiet "$1" -O "$2"; }
    else
        oops "you don't have wget or curl installed, which I need to download the binary tarball"
    fi

    # We need a hash calculator
    if command -v sha256sum > /dev/null 2>&1; then
        hashCmd="sha256sum -b"
        elif command -v shasum > /dev/null 2>&1; then
        hashCmd="shasum -a 256 -b"
        elif command -v openssl > /dev/null 2>&1; then
        hashCmd="openssl dgst -r -sha256"
    else
        oops "cannot verify the SHA-256 hash of '$releaseURL'; you need one of 'shasum', 'sha256sum', or 'openssl'"
    fi

    # Check that docker compose is available and running
    require_util "docker" "run the Norsk containers"
    # We have docker, but do we have docker compose v2
    composeVersion=$(docker compose version 2> /dev/null |  grep -i "Docker Compose version ")
    if [ $? -ne 0 ]; then
        oops "you do not have docker compose v2 installed, which I need to run the Norsk containers"
    fi
    # We have docker compose - check that docker is running
    if ! docker images > /dev/null 2>&1; then
        oops "docker seems to be installed, but I can't run it - is the daemon running and do you have permissions?"
    fi

    # Make sure we are not about to overwrite an exsiting installation
    if [ -d $targetDirname ] ; then
        oops "there already is a directory called $targetDirname"
    fi
    if [ -f $targetDirname ] ; then
        oops "there already is a file called $targetDirname"
    fi

    # Prompt the user for the location of their license file
    find_license

    echo "Found docker compose $composeVersion and other required utilities, proceeding"
    echo

    echo "Downloading Norsk Studio from '$releaseURL'"
    fetch "$releaseURL" "$tarball" || oops "failed to download '$releaseURL'"

    calculatedHash=$($hashCmd "$tarball" | cut -c1-64)

    if [ "$calculatedHash" != "$releaseHash" ]; then
        oops "SHA-256 hash mismatch in '$releaseURL'; expected $releaseHash, got $calculatedHash"
    fi

    unpack=$tmpDir/unpack
    mkdir -p "$unpack"
    tar -xf "$tarball" -C "$unpack" || oops "failed to unpack '$releaseURL'"

    mkdir -p ./$targetDirname
    mv "$unpack"/norsk-studio*/* ./$targetDirname

    # Move the license file into place
    mkdir -p ./$targetDirname/secrets

    mv $tmpLicense ./$targetDirname/secrets

    # Pull down the docker containers
    echo "Downloading containers"
    docker pull norskvideo/norsk:v1.0.380-main
    docker pull norskvideo/norsk-studio:1.0.381

    # Pull down the sample media files
    echo "Downloading media samples"
    sourcesDir=$targetDirname/sources
    mkdir -p $sourcesDir
    for source in InkDrop.ts Weaving.ts ; do
        fetch "https://s3.eu-west-1.amazonaws.com/norsk.video/media-examples/data/$source" "$sourcesDir/$source"
    done

    rm -rf norsk-studio/scripts

    echo "Installation complete. To start Norsk Studio, change to the 'norsk-studio'"
    echo "directory and run './up.sh'.  To stop it, just run './down.sh'."
    echo "If you want to send in a sample SRT source to the example workflows,"
    echo "then you can use './sample-srt-source.sh'."
    echo "Thank you for installing, and enjoy using Norsk Studio!"
    echo

} # End of wrapping
